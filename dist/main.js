!function(){var t={},e=[],n={current:!1};function r(){var t=e[0];t&&Shelly.call(t[0],t[1],(function(n){if(print("onComplete"),t[2])try{print("Calling callback for: ",t[0],"with result: ",JSON.stringify(n)),t[2](n)}catch(t){print("Shelly call caught an error: ",t)}print("pop the call from queue. Calls left: ",e.length),e.splice(0,1),r()}))}function i(t,n,i){e.push([t,n,i]),1===e.length&&r()}function c(t){if(t["bms/cfg/default_lock_state"]&&t["bms/cfg/default_lock_state"].value&&t["bms/cfg/timeout"]&&t["bms/cfg/timeout"].value&&t["bms/cfg/input"]){var e=t["bms/cfg/timeout"].value,n=t["bms/cfg/default_lock_state"].value,r=t["bms/cfg/input"].value;print(e,n,r),print("Switching"),Shelly.call("Switch.Set",{id:r,on:"CLOSED"===n,toggle_after:e||5})}}function a(e){var n,r,a,o=e.items;r=function(t){t&&(c(o),i("KVS.Delete",{key:"accepted"}))},a=o[n="accepted"]?o[n].value:null,t[n]!==a&&(t[n]=a,r(a))}Shelly.addEventHandler((function(t){print("============================================Event: ",JSON.stringify(t)),t.info.event})),Shelly.addStatusHandler((function(t){print("============================================Status: ",JSON.stringify(t)),"ws"!==t.component?"sys"===t.component&&i("KVS.GetMany",{},a):t.delta.connected&&(n.current=!0)})),Shelly.call("Wifi.SetConfig",{config:{ap:{enable:!0}}}),HTTPServer.registerEndpoint("backend_connection_status",(function(t,e){var n=Shelly.getComponentStatus("WS");e.code=200,e.body=JSON.stringify({isConnected:n.connected}),e.send()})),HTTPServer.registerEndpoint("open_relay_with_rfid",(function(t,e){var n=function(t){var e=t.split("&"),n={};for(var r in e){var i=e[r].split("=");n[i[0]]=i[1]}return n}(t.query);print("=====================Read card: "),print(JSON.stringify(n)),i("KVS.GetMany",{},(function(t){!function(t,e){var n=e["bms/i/"+t];if(n){var r=n.value;print(r);var i=Shelly.getComponentStatus("Sys").unixtime;r&&r<i||c(e)}}(n.cardId,t.items)})),e.code=200,e.body="",e.send()})),System.register("reader_script",[],(function(t,e){"use strict";var n,r,i,c,a,o,l,s,u,f,p;function d(){var t=o[0];t&&Shelly.call(t[0],t[1],(function(e){if(print("onComplete"),t[2])try{print("Calling callback for: ",t[0],"with result: ",JSON.stringify(e)),t[2](e)}catch(t){print("Shelly call caught an error: ",t)}print("pop the call from queue. Calls left: ",o.length),o.splice(0,1),d()}))}function S(t,e,n){o.push([t,e,n]),1===o.length&&d()}function y(t,e,n,r,i){if(n.relay_password){var c="http://admin:"+n.relay_password.value+"@"+p+"/script/"+f.current+e,a=JSON.parse(JSON.stringify(r));a.url=c,Shelly.call(t,a,i)}else print("No password")}function v(){u.current=!0,S("Wifi.SetConfig",{config:{sta:{enable:!1}}})}function g(t){i.current||(i.current=!0,S("Wifi.SetConfig",{config:{sta:{ssid:t.ssid,pass:t.pass,enable:!0,is_open:!t.pass},sta1:{ssid:"",pass:"",enable:!1}}},(function(){i.current=!1})))}function h(){S("KVS.Get",{key:"wifi"},(function(t){print("Main Wifi: ",t.value);try{g(JSON.parse(t.value))}catch(t){print("Failed to parse wifi")}}))}function m(){var t=Shelly.getComponentConfig("Wifi");u.current=!1,S("KVS.Get",{key:"wifi"},(function(e){S("KVS.Get",{key:"relay_AP"},(function(n){print("Wifi: ",e.value,n.value);try{!function(e,n){t.sta.ssid==e.ssid?g(n):g(e)}(JSON.parse(e.value),JSON.parse(n.value))}catch(t){print("Failed to parse wifi or relay AP")}}))}))}function _(t){var e=Shelly.getComponentStatus("Wifi");if(print("Got wifi status: ",JSON.stringify(e)),null===e.ssid)return print("Not connected to wifi"),void(t&&h());S("KVS.Get",{key:"wifi"},(function(t){try{var n=JSON.parse(t.value).ssid;r.current=e.ssid===n?"wifi":"relay_AP","wifi"===r.current?(print("Ws timer set"),c.current&&Timer.clear(c.current),c.current=Timer.set(6e4,!1,(function(){var t,e=Shelly.getComponentStatus("WS");console.log("WS time passed. Status: ",JSON.stringify(e)),e.connected||(print("WS connection timed out after 1 minute. Switching to the other wifi network."),t=function(t){t&&v()},S("KVS.Get",{key:"relay_AP"},(function(e){t(!!e&&!!e.value)})))}))):(k(),function(){function t(t){y("HTTP.GET","/backend_connection_status",t.items,{},(function(t){if(print("Got response from GET /backend_connection_status: ",JSON.stringify(t)),t&&t.body_b64){var e;try{e=JSON.parse(atob(t.body_b64))}catch(t){return void print("Failed to parse response body")}print(e),e.isConnected&&v()}else print("No body in the response")}))}a.current&&Timer.clear(a.current),a.current=Timer.set(6e4,!0,(function(){var e=Shelly.getComponentStatus("WS"),n=Shelly.getComponentStatus("Wifi");!e.connected&&n.ssid&&Shelly.call("KVS.GetMany",{},t)}))}()),C(),print(r.current)}catch(t){print("Failed to parse wifi config")}}))}function b(t){print("============================================Event: "),print(JSON.stringify(t));var e=t.info.event;if(print(e),"sta_connect_fail"===e&&(s.current--,s.current<=0&&(s.current=l,m())),"sta_disconnected"===e){if(8===t.info.reason&&!u.current)return;s.current=l,m()}if("sta_connect_fail"===e||"sta_disconnected"===e)return r.current=null,void(a.current&&(Timer.clear(a.current),a.current=null));"sta_ip_acquired"!==e?"sta_connected"!==e||_():"relay_AP"===r.current&&k()}function w(t){var e=t.items;function i(t,r){var i=e[t]?e[t].value:null;n[t]!==i&&(n[t]=i,r(i))}i("wifi",(function(t){g(JSON.parse(t))})),i("relay_AP",(function(t){"relay_AP"===r.current&&g(JSON.parse(t))})),i("websocket_server",(function(){"wifi"===r.current?C():h()})),i("relay_ip",(function(t){"relay_AP"===r.current&&C()}))}function N(t){print("Status change: ",JSON.stringify(t)),"ws"!==t.component?"sys"!==t.component||S("KVS.GetMany",{},w):t.delta.connected||v()}function O(t){print("Scan card: ",t),null!==r.current?"relay_AP"===r.current?Shelly.call("KVS.GetMany",{},(function(e){var n=e.items;y("HTTP.GET","/open_relay_with_rfid?cardId="+t,n,{})})):Shelly.emitEvent("card_read",{cardId:t}):print("The read card is ignored as the reader is not connected to wifi")}function C(){function t(t,e,n){t?t.restart_required&&S("Shelly.Reboot"):print("Failed to update ws config: ",n)}print("updateWSConfig"),"wifi"===r.current&&S("KVS.Get",{key:"websocket_server"},(function(e,n,r){var i;!n&&e?(i=e.value,print("Use ws server: ",i),S("WS.SetConfig",{config:{server:i,ssl_ca:"*",enable:!0}},t)):print("Abort ws connection, couldn't take ws url from KVS: ",r)}))}function k(){function t(t){if(print("Got scripts: ",t),t&&t.body){var e=JSON.parse(t.body);print(e);var n=e.scripts;for(var r in n)"readers"===n[r].name&&(f.current=n[r].id)}else print("No body in the response")}f.current||S("KVS.Get",{key:"relay_password"},(function(e){S("HTTP.GET",{url:"http://admin:"+e.value+"@192.168.33.1/rpc/Script.List"},t)}))}return e&&e.id,{setters:[],execute:function(){n={},r={current:null},i={current:!1},c={current:null},a={current:null},o=[],s={current:l=1},u={current:!1},f={current:null},p="192.168.33.1",Shelly.call("KVS.GetMany",{},(function(t){var e=Object.keys(t.items);for(var r in e){var i=e[r],c=t.items[i];n[i]=c?c.value:null}})),Shelly.addEventHandler(b),Shelly.addStatusHandler(N),RFIDScanner.start(O),_(!0),C()}}}))}();